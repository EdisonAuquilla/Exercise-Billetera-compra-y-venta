/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.billetera;


import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Edison Auquilla Y Adonis Turez
 */
public class Interfaz extends javax.swing.JFrame {
DefaultTableModel modelo; 
      double CashRest = 100;
    public Interfaz() {
        initComponents();
modelo = new DefaultTableModel();
modelo.addColumn("ID");
modelo.addColumn("TYPE");
modelo.addColumn("DATE");
modelo.addColumn("AMOUNT");
this.table.setModel(modelo);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bottomPurchase = new javax.swing.JButton();
        bottomSale = new javax.swing.JButton();
        amount = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        totalMoney = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bottomPurchase.setBackground(new java.awt.Color(51, 255, 51));
        bottomPurchase.setText("Purschase");
        bottomPurchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bottomPurchaseActionPerformed(evt);
            }
        });

        bottomSale.setBackground(new java.awt.Color(255, 51, 51));
        bottomSale.setText("Sale");
        bottomSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bottomSaleActionPerformed(evt);
            }
        });

        amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountActionPerformed(evt);
            }
        });

        jLabel1.setText("Enter the amount ");

        jLabel2.setText("Total");

        table.setBackground(new java.awt.Color(204, 255, 102));
        table.setForeground(new java.awt.Color(51, 51, 51));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "TYPE", "DATE", "AMOUNT"
            }
        ));
        table.setSelectionForeground(new java.awt.Color(255, 51, 51));
        jScrollPane2.setViewportView(table);

        totalMoney.setBackground(new java.awt.Color(51, 255, 51));
        totalMoney.setText(" $ 100");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bottomPurchase, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(94, 94, 94)
                                .addComponent(bottomSale, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(totalMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(totalMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bottomPurchase, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bottomSale, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bottomPurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bottomPurchaseActionPerformed
  double amountResult = Double.parseDouble(this.amount.getText());

try {
     
    
    if (amountResult > 0 && amountResult <= CashRest ) {
          CashRest -= amountResult;
         // Generar un número aleatorio para la posición 0
        Random random = new Random();
        int randomId = random.nextInt(1000); // Numero aleatorio entre 0 y 999 (cambiar según necesidades)
         LocalDateTime currentDateTime = LocalDateTime.now();// Obtener la fecha actual
              DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
              String formattedDateTime = currentDateTime.format(formatter); //formato deseado
        // Agregar la fila al modelo de tabla
        String[] info = new String[4];
        info[0] = String.valueOf(randomId); // Colocar el número aleatorio en la posición 0
        info[1] = "P"; // Tipo de operación (por ejemplo, "P" para compra)
        info[2] = formattedDateTime;
        info[3] = String.valueOf(amountResult); // Precio ingresado
        
       
        modelo.addRow(info); // Agregar la fila al modelo de la tabla
         
         totalMoney.setText("$"+CashRest);
        amount.setText("");
    } else {
       // Mostrar ventana emergente
        javax.swing.JOptionPane.showMessageDialog(null, "¡You don't have that much money!");
        totalMoney.setText("$"+CashRest);
        amount.setText("");
    }
} catch (NumberFormatException e) {
    // Mostrar ventana emergente de error si no se ingresa un número válido
    javax.swing.JOptionPane.showMessageDialog(null, "Por favor, ingresa solo números válidos.");
   
}

    }//GEN-LAST:event_bottomPurchaseActionPerformed

    private void amountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountActionPerformed
            // s add your handling code here:
          
    

    }//GEN-LAST:event_amountActionPerformed

    private void bottomSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bottomSaleActionPerformed
 double amountResult = Double.parseDouble(this.amount.getText());
  CashRest += amountResult;
  
try {
    if (amountResult== 0 ) {
        // Mostrar ventana emergente
        javax.swing.JOptionPane.showMessageDialog(null, "¡You don't have that much money!");
        amount.setText("");
    } else {
        // Generar un número aleatorio para la posición 0
        Random random = new Random();
        int randomId = random.nextInt(1000); // Número aleatorio 
             LocalDateTime currentDateTime = LocalDateTime.now();// Obtener la fecha actual
              DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
              String formattedDateTime = currentDateTime.format(formatter); //formato deseado
        // Agregar la fila al modelo de tabla
        String[] info = new String[4];
        info[0] = String.valueOf(randomId); // Colocar el número aleatorio en la posición 0
        info[1] = "S"; // Tipo de operación (por ejemplo, "S" para venta)
        info[2] = formattedDateTime;
        info[3] = String.valueOf(amountResult); // Precio ingresado
       
        modelo.addRow(info); // Agregar la fila al modelo de la tabla
          
         totalMoney.setText("$"+CashRest);
         amount.setText("");
    }
} catch (NumberFormatException e) {
    // Mostrar ventana emergente de error si no se ingresa un número válido
    javax.swing.JOptionPane.showMessageDialog(null, "Por favor, ingresa solo números válidos.");
   
}
    }//GEN-LAST:event_bottomSaleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Interfaz().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amount;
    private javax.swing.JButton bottomPurchase;
    private javax.swing.JButton bottomSale;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table;
    private javax.swing.JLabel totalMoney;
    // End of variables declaration//GEN-END:variables
}
